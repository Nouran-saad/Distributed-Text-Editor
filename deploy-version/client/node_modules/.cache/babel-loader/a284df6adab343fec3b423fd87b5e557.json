{"ast":null,"code":"import _slicedToArray from\"C:/Users/Ahmed Saad/Desktop/deploy-text-editor/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/*The main reason we choose quill is the delta feature \r\nthat allows multiple users to edit at the same time without overwriting any changes */ // here is all the code for our text editor component\n// Q- Quill isn't a react component so we need to do some work\nimport React,{useEffect,useCallback,useState}from'react';import Quill from\"quill\";import\"quill/dist/quill.snow.css\";// stylesheet\nimport{Offline,Online}from\"react-detect-offline\";import{io}from'socket.io-client';// to allow connections \nimport{useParams}from'react-router-dom';// route to different routes \nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var editor2=document.createElement(\"div\");var ENDPOINT='https://server-edtior.herokuapp.com/';var q;var SAVE_INTERVAL_MS=2000;// every 2 seconds we are saving our document \nexport default function TextEdtior(){/* State allows us to manage changing data in an application. so we create \r\na state for socket and a state for quill to access it from anywhere (in the code) \r\nso now we can sync between users (collaboration)\r\n-- useState Hook allows us to track state in a function component*/var _useParams=useParams(),documentId=_useParams.id;var _useState=useState(),_useState2=_slicedToArray(_useState,2),socket=_useState2[0],setSocket=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),quill=_useState4[0],setQuill=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),user=_useState6[0],setUser=_useState6[1];// useEffect? you tell React that your component needs to do something after render(aka display)\n//-------------------loading document----------------------\nuseEffect(function(){if(socket==null||quill==null)return;// we have to make sure they are defined because this func depends on them\n// once automatically cleans up the event after \nsocket.once(\"load-document\",function(document){quill.setContents(document.data);quill.enable();//we enable only if we get document \n});socket.emit(\"get-document\",documentId);// send to server document ID\n},[socket,quill,documentId]);// once we load the document we get the number of users of the document and display it\nuseEffect(function(){if(socket==null||quill==null)return;socket.once(\"load-document\",function(document){quill.setContents(document.data);quill.enable();editor2.innerHTML=\"Number of Current Users \"+document.user;});},[socket,quill]);/* we want to establish the connection once([]) upon rendering so we use a \r\nuseEffect to handle this connection*/ //-------------------handling connection-----------------------\nuseEffect(function(){var s=io(ENDPOINT,{transports:['websocket']});// url of server // this function returns a socket(state)\nsetSocket(s);return function(){s.disconnect();//cleaning up \n};},[]);//------------------saving our document ----------------------\nuseEffect(function(){if(socket==null||quill==null)return;/* interval creates a timer*/var interval=setInterval(function(){socket.emit(\"save-document\",quill.getContents());},SAVE_INTERVAL_MS);//save our contents every 2 seconds \nreturn function(){clearInterval(interval);//cleaning up \n};},[socket,quill]);// this func depends on socket,quill\n//-------------------updating our document---------------------\nuseEffect(function(){if(socket==null||quill==null)return;var handler=function handler(delta){quill.updateContents(delta);};socket.on('receive-changes',handler);return function(){quill.off('receive-changes',handler);};},[socket,quill]);// this func depends on socket,quill\n// we listen on the number of users of the document and display it\nuseEffect(function(){if(socket==null)return;socket.on('users',function(user){setUser(user);editor2.innerHTML=\"Number of Current Users \"+user;});},[socket,user]);// this func depends on socket,user\n//------------------listening to changes -------------------\nuseEffect(function(){if(socket==null||quill==null)return;var handler=function handler(delta,oldDelta,source){// we do this because we are only interested in the changes the user makes we do not want\n// any changes done in the library (not by the user to be sent to the clients)\nif(source!=='user')return;socket.emit(\"send-changes\",delta);// is just what changed in the document -- we send this to the server using socket.emit\n};quill.on('text-change',handler);// text-change quill API, handler is called whenever text-change is on\nreturn function(){quill.off('text-change',handler);// upon cleaning up \n};},[socket,quill]);// this func depends on socket,quill\n// we have our useCallback function that is gonna be called once the wrapper is rendered on our page\n// it takes the wrapper as parameter so wrapper is always defined before useCallback is called\nvar wrapperRef=useCallback(function(wrapper){var toolbarOptions=[['bold','italic','underline','strike'],// toggled buttons\n['blockquote','code-block'],[{'list':'ordered'},{'list':'bullet'}],[{'script':'sub'},{'script':'super'}],// superscript/subscript\n[{'indent':'-1'},{'indent':'+1'}],// outdent/indent\n[{'direction':'rtl'}],// text direction\n[{'size':['small',false,'large','huge']}],// custom dropdown\n[{'header':[1,2,3,4,5,6,false]}],[{'color':[]},{'background':[]}],// dropdown with defaults from theme\n[{'font':[]}],[{'align':[]}],['clean']// remove formatting button\n];var editor=document.createElement(\"div\");//create an object editor\nwrapper.append(editor2);// put editor into wrapper \nwrapper.append(editor);// put editor into wrapper \neditor2.innerHTML=\"Number of Current Users \";var el=document.getElementById(\"status\");setInterval(function(){if(el.textContent===\"You are Offline, Please Check your Connection and Try Again!\"){q.disable();}else{q.enable();}},1000);q=new Quill(editor,{theme:\"snow\",modules:{toolbar:toolbarOptions}});q.disable();// if no document then disbale \nq.setText('Loading...');// if disabled display Loading...\nsetQuill(q);},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){var str=window.location.href;var loc=str.substring(str.indexOf('documents')+10);navigator.clipboard.writeText(loc);},children:\"Copy to Clipboard\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"status\",children:/*#__PURE__*/_jsx(Offline,{id:\"offline\",children:\"You are Offline, Please Check your Connection and Try Again!\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"text container\",ref:wrapperRef})]});}/* we're creating an instance of the quill component once after rendering the page*/ /* we use ref to reference our container and then UseRef to allow access DOM elements directly, and persist data \r\nbetween renders without causing a component to re-render infinitely when changes occur (so we avoid)\r\nrerendering the quill component or toolbar when page is refreshed or changes are made*/","map":{"version":3,"names":["React","useEffect","useCallback","useState","Quill","Offline","Online","io","useParams","editor2","document","createElement","ENDPOINT","q","SAVE_INTERVAL_MS","TextEdtior","documentId","id","socket","setSocket","quill","setQuill","user","setUser","once","setContents","data","enable","emit","innerHTML","s","transports","disconnect","interval","setInterval","getContents","clearInterval","handler","delta","updateContents","on","off","oldDelta","source","wrapperRef","wrapper","toolbarOptions","editor","append","el","getElementById","textContent","disable","theme","modules","toolbar","setText","str","window","location","href","loc","substring","indexOf","navigator","clipboard","writeText"],"sources":["C:/Users/Ahmed Saad/Desktop/deploy-text-editor/client/src/TextEdtior.js"],"sourcesContent":["/*The main reason we choose quill is the delta feature \r\nthat allows multiple users to edit at the same time without overwriting any changes */\r\n// here is all the code for our text editor component\r\n// Q- Quill isn't a react component so we need to do some work\r\nimport React, { useEffect,useCallback,useState } from 'react'\r\nimport Quill from \"quill\"\r\nimport \"quill/dist/quill.snow.css\" // stylesheet\r\nimport { Offline, Online } from \"react-detect-offline\";\r\nimport {io} from 'socket.io-client' // to allow connections \r\nimport {useParams} from 'react-router-dom'  // route to different routes \r\nconst editor2=document.createElement(\"div\") \r\nconst ENDPOINT = 'https://server-edtior.herokuapp.com/';\r\n\r\nvar q;\r\n\r\n\r\nconst SAVE_INTERVAL_MS = 2000 // every 2 seconds we are saving our document \r\nexport default function TextEdtior() {\r\n\r\n/* State allows us to manage changing data in an application. so we create \r\na state for socket and a state for quill to access it from anywhere (in the code) \r\nso now we can sync between users (collaboration)\r\n-- useState Hook allows us to track state in a function component*/\r\n\r\n    const {id: documentId}=useParams()\r\n    const [socket,setSocket]=useState()\r\n    const [quill,setQuill]=useState()\r\n    const [user,setUser]=useState(1)\r\n\r\n// useEffect? you tell React that your component needs to do something after render(aka display)\r\n//-------------------loading document----------------------\r\nuseEffect (()=>{\r\n    if(socket== null || quill==null) return // we have to make sure they are defined because this func depends on them\r\n// once automatically cleans up the event after \r\n    socket.once (\"load-document\",document =>{\r\n        quill.setContents (document.data)\r\n        quill.enable() //we enable only if we get document \r\n    })\r\n  socket.emit (\"get-document\",documentId) // send to server document ID\r\n  },[socket,quill,documentId])\r\n\r\n// once we load the document we get the number of users of the document and display it\r\n  useEffect (()=>{\r\n    if(socket== null || quill==null) return\r\n    socket.once (\"load-document\",document =>{\r\n        quill.setContents (document.data)\r\n        quill.enable()\r\n        editor2.innerHTML=\"Number of Current Users \"+document.user\r\n\r\n    })\r\n  },[socket,quill])\r\n\r\n/* we want to establish the connection once([]) upon rendering so we use a \r\nuseEffect to handle this connection*/\r\n//-------------------handling connection-----------------------\r\n\r\n    useEffect(() => {\r\n       const s= io(ENDPOINT, {transports:['websocket']});  // url of server // this function returns a socket(state)\r\n       setSocket(s)\r\n        return () => {\r\n         s.disconnect()  //cleaning up \r\n        }\r\n    },[])\r\n\r\n//------------------saving our document ----------------------\r\n      useEffect(() => {\r\n    if (socket == null || quill == null) return\r\n/* interval creates a timer*/\r\n    const interval = setInterval(() => {\r\n      socket.emit(\"save-document\", quill.getContents())\r\n    }, SAVE_INTERVAL_MS) //save our contents every 2 seconds \r\n\r\n    return () => {\r\n      clearInterval(interval) //cleaning up \r\n    }\r\n  }, [socket, quill]) // this func depends on socket,quill\r\n\r\n\r\n //-------------------updating our document---------------------\r\n    useEffect(()=> {\r\n        if(socket== null || quill==null) return\r\n\r\n        const handler = (delta)=>{\r\n          \r\n            quill.updateContents(delta)\r\n        }\r\n        socket.on('receive-changes',handler)\r\n\r\n\r\n        return () => {\r\n            quill.off('receive-changes',handler)\r\n        }\r\n    },[socket,quill]) // this func depends on socket,quill\r\n\r\n// we listen on the number of users of the document and display it\r\n    useEffect(()=> {\r\n      if(socket== null) return\r\n      socket.on('users',user => {\r\n        setUser(user)\r\n        editor2.innerHTML=\"Number of Current Users \"+user\r\n\r\n      })\r\n  },[socket,user]) // this func depends on socket,user\r\n\r\n    //------------------listening to changes -------------------\r\n    useEffect(()=> {\r\n        if(socket== null || quill==null) return\r\n\r\n        const handler = (delta,oldDelta,source)=>{\r\n// we do this because we are only interested in the changes the user makes we do not want\r\n// any changes done in the library (not by the user to be sent to the clients)\r\n            if (source!== 'user') return\r\n            socket.emit(\"send-changes\",delta) // is just what changed in the document -- we send this to the server using socket.emit\r\n        }\r\n        quill.on('text-change',handler)  // text-change quill API, handler is called whenever text-change is on\r\n\r\n        return () => {\r\n            quill.off('text-change',handler)  // upon cleaning up \r\n        }\r\n    },[socket,quill]) // this func depends on socket,quill\r\n\r\n\r\n// we have our useCallback function that is gonna be called once the wrapper is rendered on our page\r\n// it takes the wrapper as parameter so wrapper is always defined before useCallback is called\r\nconst wrapperRef= useCallback((wrapper) => {\r\n\r\n  var toolbarOptions = [\r\n      ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n      ['blockquote', 'code-block'],\r\n    \r\n      [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n      [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\r\n      [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\r\n      [{ 'direction': 'rtl' }],                         // text direction\r\n    \r\n      [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n    \r\n      [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n      [{ 'font': [] }],\r\n      [{ 'align': [] }],\r\n    \r\n      ['clean']                                         // remove formatting button\r\n    ];\r\n    \r\n const editor=document.createElement(\"div\") //create an object editor\r\n\r\n wrapper.append(editor2) // put editor into wrapper \r\n\r\n wrapper.append(editor) // put editor into wrapper \r\n\r\n editor2.innerHTML=\"Number of Current Users \"\r\n const el = document.getElementById(\"status\")\r\n setInterval(() => {\r\n   if(el.textContent === \"You are Offline, Please Check your Connection and Try Again!\"){\r\n     q.disable()\r\n   }\r\n   else{\r\n     q.enable()\r\n   }\r\n }, 1000);\r\n\r\n q=  new Quill(editor,{theme: \"snow\",\r\n  modules: {\r\n      toolbar: toolbarOptions\r\n      }\r\n  })\r\n  q.disable()  // if no document then disbale \r\n  q.setText('Loading...') // if disabled display Loading...\r\n  setQuill(q)\r\n} ,[])\r\n\r\nreturn (\r\n  <>\r\n<div>\r\n<button onClick={()=>{\r\n  var str = window.location.href;\r\n  var loc = str.substring(str.indexOf('documents') + 10);\r\n  navigator.clipboard.writeText(loc);\r\n}}>Copy to Clipboard</button>\r\n</div>\r\n<div id=\"status\">\r\n    <Offline id = \"offline\">\r\n        You are Offline, Please Check your Connection and Try Again!\r\n    </Offline>\r\n\r\n\r\n\r\n  </div>\r\n<div className=\"text container\" ref={wrapperRef}></div>\r\n</>\r\n)\r\n}\r\n\r\n/* we're creating an instance of the quill component once after rendering the page*/\r\n/* we use ref to reference our container and then UseRef to allow access DOM elements directly, and persist data \r\nbetween renders without causing a component to re-render infinitely when changes occur (so we avoid)\r\nrerendering the quill component or toolbar when page is refreshed or changes are made*/"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed Saad\\\\Desktop\\\\text-editor\\\\client\\\\src\\\\TextEdtior.js\",\n    _s = $RefreshSig$();\n\n/*The main reason we choose quill is the delta feature \r\nthat allows multiple users to edit at the same time without overwriting any changes */\n// here is all the code for our text editor component\n// Q- Quill isn't a react component so we need to do some work\nimport React, { useEffect, useCallback, useState } from 'react';\nimport Quill from \"quill\";\nimport \"quill/dist/quill.snow.css\"; // stylesheet\n\nimport { io } from 'socket.io-client'; // to allow connections \n\nimport { useParams } from 'react-router-dom'; // route to different routes \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst editor2 = document.createElement(\"div\");\nconst SAVE_INTERVAL_MS = 2000; // every 2 seconds we are saving our document \n\nexport default function TextEdtior() {\n  _s();\n\n  /* State allows us to manage changing data in an application. so we create \r\n  a state for socket and a state for quill to access it from anywhere (in the code) \r\n  so now we can sync between users (collaboration)\r\n  -- useState Hook allows us to track state in a function component*/\n  const {\n    id: documentId\n  } = useParams();\n  const [socket, setSocket] = useState();\n  const [quill, setQuill] = useState();\n  const [user, setUser] = useState(1); // useEffect? you tell React that your component needs to do something after render(aka display)\n  //-------------------loading document----------------------\n\n  useEffect(() => {\n    if (socket == null || quill == null) return; // we have to make sure they are defined because this func depends on them\n    // once automatically cleans up the event after \n\n    socket.once(\"load-document\", document => {\n      quill.setContents(document.data);\n      quill.enable(); //we enable only if we get document \n    });\n    socket.emit(\"get-document\", documentId); // send to server document ID\n  }, [socket, quill, documentId]);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    socket.once(\"load-document\", document => {\n      quill.setContents(document.data);\n      quill.enable();\n      editor2.innerHTML = \"Number of Current Users \" + document.user;\n    });\n  }, [socket, quill]);\n  /* we want to establish the connection once([]) upon rendering so we use a \r\n  useEffect to handle this connection*/\n  //-------------------handling connection-----------------------\n\n  useEffect(() => {\n    const s = io(\"http://localhost:3001\");\n    setSocket(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    const interval = setInterval(() => {\n      socket.emit(\"save-document\", quill.getContents());\n    }, SAVE_INTERVAL_MS);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [socket, quill]);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = delta => {\n      quill.updateContents(delta);\n    };\n\n    socket.on('receive-changes', handler);\n    return () => {\n      quill.off('receive-changes', handler);\n    };\n  }, [socket, quill]);\n  useEffect(() => {\n    if (socket == null) return;\n    socket.on('users', user => {\n      setUser(user);\n      editor2.innerHTML = \"Number of Current Users \" + user;\n    });\n  }, [socket, user]);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = (delta, oldDelta, source) => {\n      if (source !== 'user') return;\n      socket.emit(\"send-changes\", delta);\n    };\n\n    quill.on('text-change', handler);\n    return () => {\n      quill.off('text-change', handler);\n    };\n  }, [socket, quill]);\n  const wrapperRef = useCallback(wrapper => {\n    if (wrapper == null) return;\n    wrapper.innerHTML = \"\"; // to not allow to create mulitple toolbars\n\n    const editor = document.createElement(\"div\"); //create an object editor\n\n    wrapper.append(editor2); // put editor into wrapper \n\n    wrapper.append(editor); // put editor into wrapper \n\n    editor2.innerHTML = \"Number of Current Users \";\n    const q = new Quill(editor, {\n      theme: \"snow\"\n    });\n    q.disable();\n    q.setText('Loading...');\n    setQuill(q);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text\",\n    ref: wrapperRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TextEdtior, \"q8ltL90XPhuyVX+GlfnFQ/CITIE=\", false, function () {\n  return [useParams];\n});\n\n_c = TextEdtior;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEdtior\");","map":{"version":3,"names":["React","useEffect","useCallback","useState","Quill","io","useParams","editor2","document","createElement","SAVE_INTERVAL_MS","TextEdtior","id","documentId","socket","setSocket","quill","setQuill","user","setUser","once","setContents","data","enable","emit","innerHTML","s","disconnect","interval","setInterval","getContents","clearInterval","handler","delta","updateContents","on","off","oldDelta","source","wrapperRef","wrapper","editor","append","q","theme","disable","setText"],"sources":["C:/Users/Ahmed Saad/Desktop/text-editor/client/src/TextEdtior.js"],"sourcesContent":["/*The main reason we choose quill is the delta feature \r\nthat allows multiple users to edit at the same time without overwriting any changes */\r\n// here is all the code for our text editor component\r\n// Q- Quill isn't a react component so we need to do some work\r\nimport React, { useEffect,useCallback,useState } from 'react'\r\nimport Quill from \"quill\"\r\nimport \"quill/dist/quill.snow.css\" // stylesheet\r\nimport {io} from 'socket.io-client' // to allow connections \r\nimport {useParams} from 'react-router-dom'  // route to different routes \r\nconst editor2=document.createElement(\"div\") \r\n\r\n\r\nconst SAVE_INTERVAL_MS = 2000 // every 2 seconds we are saving our document \r\nexport default function TextEdtior() {\r\n\r\n/* State allows us to manage changing data in an application. so we create \r\na state for socket and a state for quill to access it from anywhere (in the code) \r\nso now we can sync between users (collaboration)\r\n-- useState Hook allows us to track state in a function component*/\r\n\r\n    const {id: documentId}=useParams()\r\n    const [socket,setSocket]=useState()\r\n    const [quill,setQuill]=useState()\r\n    const [user,setUser]=useState(1)\r\n\r\n// useEffect? you tell React that your component needs to do something after render(aka display)\r\n//-------------------loading document----------------------\r\nuseEffect (()=>{\r\n    if(socket== null || quill==null) return // we have to make sure they are defined because this func depends on them\r\n// once automatically cleans up the event after \r\n    socket.once (\"load-document\",document =>{\r\n        quill.setContents (document.data)\r\n        quill.enable() //we enable only if we get document \r\n    })\r\n  socket.emit (\"get-document\",documentId) // send to server document ID\r\n  },[socket,quill,documentId])\r\n\r\n  useEffect (()=>{\r\n    if(socket== null || quill==null) return\r\n    socket.once (\"load-document\",document =>{\r\n        quill.setContents (document.data)\r\n        quill.enable()\r\n        editor2.innerHTML=\"Number of Current Users \"+document.user\r\n\r\n    })\r\n  },[socket,quill])\r\n\r\n/* we want to establish the connection once([]) upon rendering so we use a \r\nuseEffect to handle this connection*/\r\n//-------------------handling connection-----------------------\r\n\r\n    useEffect(() => {\r\n       const s= io(\"http://localhost:3001\")\r\n       setSocket(s)\r\n        return () => {\r\n         s.disconnect()\r\n        }\r\n    },[])\r\n\r\n      useEffect(() => {\r\n    if (socket == null || quill == null) return\r\n\r\n    const interval = setInterval(() => {\r\n      socket.emit(\"save-document\", quill.getContents())\r\n    }, SAVE_INTERVAL_MS)\r\n\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [socket, quill])\r\n\r\n\r\n    useEffect(()=> {\r\n        if(socket== null || quill==null) return\r\n\r\n        const handler = (delta)=>{\r\n          \r\n            quill.updateContents(delta)\r\n        }\r\n        socket.on('receive-changes',handler)\r\n\r\n\r\n        return () => {\r\n            quill.off('receive-changes',handler)\r\n        }\r\n    },[socket,quill])\r\n\r\n\r\n    useEffect(()=> {\r\n      if(socket== null) return\r\n      socket.on('users',user => {\r\n        setUser(user)\r\n        editor2.innerHTML=\"Number of Current Users \"+user\r\n\r\n      })\r\n  },[socket,user])\r\n\r\n\r\n    useEffect(()=> {\r\n        if(socket== null || quill==null) return\r\n\r\n        const handler = (delta,oldDelta,source)=>{\r\n            if (source!== 'user') return\r\n            socket.emit(\"send-changes\",delta)\r\n        }\r\n        quill.on('text-change',handler)\r\n\r\n        return () => {\r\n            quill.off('text-change',handler)\r\n        }\r\n    },[socket,quill])\r\n    \r\n\r\n   const wrapperRef= useCallback((wrapper) => {\r\n        if (wrapper==null) return\r\n\r\n       wrapper.innerHTML=\"\" // to not allow to create mulitple toolbars\r\n       const editor=document.createElement(\"div\") //create an object editor\r\n       wrapper.append(editor2) // put editor into wrapper \r\n\r\n       wrapper.append(editor) // put editor into wrapper \r\n       editor2.innerHTML=\"Number of Current Users \"\r\n        const q=new Quill(editor,{theme: \"snow\"})\r\n        q.disable()\r\n        q.setText('Loading...')\r\n        setQuill(q)\r\n    } ,[])\r\n\r\n\r\n  return <div className=\"text\" ref={wrapperRef}></div>\r\n  \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}